#encoding: UTF-8

import MeCab

text = 'ところがエタノール,皆さん,あんまり知らないと思います,このエタノールの沸点,なんですが,覚えておくと得なことを置いて一応,書いとくね,約78ドルです,頭に入れとくと得ですよさではでは水とエタノールの混合物なんですがこれはもう何も言えないですよ,だって汚いですもんねということで,混合物の沸点というのはこうなります,組成によって変化ということなんですね,例えば水が多くてエタノールが少ない,あるいはエタノールが多くて水が少ないというのでは全然違うんですね,さということで,このように物質の沸点というのは純物質だったら,純物の沸点,物質ごとに一定となるんですが,混合物だった場合はそうなんです,組成によって変化してしまうということなんですね,ここ,しっかりと頭中にグラフを見て覚えてください,先ほどは沸点について学びましたが,他の現象も見てみます,こちらです物質の融点,凝固点ということなんですが確認しますよ,まず答えがありました,答えを加熱したら溶け始めて液体になっちゃいましたということなんだけどこの溶け始める時の温度,融点と言うんですね,逆に気体を冷やして行きました,冷やして言ったら最後,答えなるその時ですよ,答えになり始める時の温度がありますよね,それを凝固点と言うんですね,この融点と凝固点に関しても純物質と混合物で差があるんですよ,見てください,融点,凝固点なども,純物質,あればそう物質ごとに入ってなるんですね,さらに混合物,混ざっていたらこうなっちゃうんです,組成によって変化するということなんですねこれ,実は先ほど,学んだ,ふって沸騰する時の温度ですよね,全く対応してますよね,一緒なんです,確認しますよ,沸騰する時の沸点も溶け始める時の融点も,そして固まり始める時の凝固点も全部,準備室だったら物質ごとに言って混合物であれば組成によって変化してしまうということですね,しっかりと頭に焼き付けて下さい,さあ,では,練習,行ってみましょう,こちらです,ABC,の三種類のビーカー,2,レズれ,ことなら液体が入っている,ABC,を加熱して沸騰させると液体の温度変化はそれぞれ次のようなグラフになったということで,三つのグラフが与えられていますね,じゃあねー,こちら,沸騰した時のクラブです,見ておくと液体,喉は縦軸,そして,加熱時間がそれぞれを挫くに書いてありますが,3種類の気体が水エタノール,水とエタノールの混合物の時,B,に入っていた液体を答えよ,ということですね,さあまず,グラフから,類推しましょうか,見てください,8,C,にはちょう特徴のあるピュアな直線がありますよね,これはかなりでかいですよ,だって,ピュアな直線が出るやつって,純物質でしたよね,見てくださいよ,水エタノール,水とエタノールの混合物の中で,純物質って言ったらもうわかったよね,一つ目は水です,二つ目は,エタノールですよね,ということでそう,この8,C,のグラフというのは水とエタノールのどっちかが当てはまるっていうことなんだよねそうしたら簡単じゃない,だって残るはって感じだけどその前に見てよ,B,のグラフ,汚らしいですよね,この汚らしいのは混合物の証拠ですよね,ということで,この,B,の方は水とエタノールの混合物になりますということで,答えはこちらです,水とエタノールの混合物というのが来たになりますねちなみに8,C,なんだけど'

# mecab = MeCab.Tagger ('-d /usr/local/lib/mecab/dic/mecab-ipadic-neologd')

# mecab.parse('')#文字列がGCされるのを防ぐ
# node = mecab.parseToNode(text)
# while node:
#     #単語を取得
#     word = node.surface
#     #品詞を取得
#     pos = node.feature.split(",")[1]
#     print('{0} , {1}'.format(word, pos))
#     #次の単語に進める
#     node = node.next

tokenizer = MeCab.Tagger("-Ochasen -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd")
tokenizer.parse("")
node = tokenizer.parseToNode(text)
keywords = []
while node:
    #if node.feature.split(",")[0] == u"名詞":
    #    keywords.append(node.surface)
    if node.feature.split(",")[0] == u"形容詞":
        keywords.append(node.feature.split(",")[6])
    elif node.feature.split(",")[0] == u"動詞":
        keywords.append(node.feature.split(",")[6])
    else:
        keywords.append(node.surface)
    node = node.next

print(''.join(keywords))